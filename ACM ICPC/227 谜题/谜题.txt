#include<stdio.h>
int main()
{
	while(1)
	{
		char ch[5][5] = {};
		char c;
		gets(ch[0]);
		if(ch[0][0] == '\0')
			continue;
		int x, y;
		for(int i = 1; i < 5; i++)
			gets(ch[i]);
		for(int i = 0; i < 5; i++)
		{
			for(int j = 0; j < 5; j++)
			{
				if(ch[i][j] == ' ' || ch[i][j] == '\0')//gets()函数换行是'\0'而不是'\n'
				{
					x = i;
					y = j;
				}
			}
		}
		int flag = 0;
		while(1)
		{
			c = getchar();
		if(c == '0')
			break;
		if(c == '\n')
			continue;
		switch(c)
		{
			case 'A':
			    if(x-1 < 0)
			    {
			    	flag = 1;
			    	break;
			    }
			    ch[x][y] = ch[x-1][y];
			    ch[--x][y] = ' ';
			    break;
			case 'B':
			    if(x+1 > 4)
			    {
			    	flag = 1;
			    	break;
			    }
			    ch[x][y] = ch[x+1][y];
			    ch[++x][y] = ' ';
			    break;
			case 'L':
			    if(y-1 < 0)
			    {
			    	flag = 1;
			    	break;
			    }
			    ch[x][y] = ch[x][y-1];
			    ch[x][--y] = ' ';
			    break;
			case 'R':
			    if(y+1 > 4)
			    {
			    	flag = 1;
			    	break;
			    }
			    ch[x][y] = ch[x][y+1];
			    ch[x][++y] = ' ';
			    break;
		    }
		}
		if(flag)
		{
			printf("This puzzle has no final configuration.\n");
			continue;
		}
		else
		{
			for(int i = 0; i < 5; i++)
			{
				for(int j = 0; j < 5; j++)
				{
					printf(j == 4 ? "%c\n" : "%c", ch[i][j]);
				}
			}
		}
		getchar();
	}
	return 0;
}