// UVa1625颜色长度
//刘如家

＃包括< cstdio >
＃包括<：字符串>
＃包括<算法>
使用 名称空间 std ;

const  int maxn = 5000 + 5 ;
const  int INF = 1000000000 ;

char p [maxn]，q [maxn]; //从位置1开始
int sp [ 26 ]，sq [ 26 ]，ep [ 26 ]，eq [ 26 ]; // sp [i]字符i在p中的开始位置
int d [ 2 ] [maxn]，c [ 2 ] [maxn]; // c [i] [j]：混合序列中有多少种“不完整”颜色

int  main（）{
  int T;
  scanf（“％d ”，＆T）;
  而（T--）{
    scanf（“％s％s ”，p + 1，q + 1）;

    int n = strlen（p + 1）;
    int m = strlen（q + 1）;
    对于（int i = 1 ; i <= n; i ++）p [i]-= ' A ' ;
    对于（int i = 1 ; i <= m; i ++）q [i]-= ' A ' ;

    //计算s和e
    for（int i = 0 ; i < 26 ; i ++）{sp [i] = sq [i] = INF; ep [i] = eq [i] = 0 ; }
    for（int i = 1 ; i <= n; i ++）{
      sp [p [i]] = min（sp [p [i]]，i）;
      ep [p [i]] = i;
    }
    for（int i = 1 ; i <= m; i ++）{
      sq [q [i]] = min（sq [q [i]]，i）;
      eq [q [i]] = i;
    }

    // dp
    int = 0 ;
    memset（c，0，sizeof（c））;
    memset（d，0，sizeof（d））;
    for（int i = 0 ; i <= n; i ++）{
      for（int j = 0 ; j <= m; j ++）{
        如果（！i &&！j）继续；

        //计算d
        int v1 = INF，v2 = INF；
        如果（i）v1 = d [t ^ 1 ] [j] + c [t ^ 1 ] [j]；//从p中删除
        如果（j）v2 = d [t] [j- 1 ] + c [t] [j- 1 ]；//从q中删除
        d [t] [j] = min（v1，v2）;

        //计算c
        如果（i）{
          c [t] [j] = c [t ^ 1 ] [j];
          if（sp [p [i]] == i && sq [p [i]]> j）c [t] [j] ++;
          if（ep [p [i]] == i && eq [p [i]] <= j）c [t] [j]-;
        } 否则 如果（j）{
          c [t] [j] = c [t] [j- 1 ];
          if（sq [q [j]] == j && sp [q [j]]> i）c [t] [j] ++;
          if（eq [q [j]] == j && ep [q [j]] <= i）c [t] [j]-;
        }
      }
      t ^ = 1 ;
    }
    printf（“％d \ n ”，d [t ^ 1 ] [m]）;
  }
  返回 0 ;
}